{"version":3,"sources":["../node_modules/figlet/lib/figlet.js","../node_modules/figlet/lib/node-figlet.js","../node_modules/clear/index.js","../node_modules/figlet/importable-fonts/Standard.js","../node_modules/chalk/node_modules/color-name/index.js","../node_modules/chalk/node_modules/color-convert/conversions.js","../node_modules/chalk/node_modules/color-convert/route.js","../node_modules/chalk/node_modules/color-convert/index.js","../node_modules/chalk/node_modules/ansi-styles/index.js","../node_modules/chalk/node_modules/has-flag/index.js","../node_modules/chalk/node_modules/supports-color/index.js","../node_modules/chalk/source/util.js","../node_modules/chalk/source/templates.js","../node_modules/chalk/source/index.js","colorStates.js","vaq.js"],"names":["figlet","FULL_WIDTH","FITTING","SMUSHING","CONTROLLED_SMUSHING","figFonts","figDefaults","font","fontPath","hRule1_Smush","ch1","ch2","hardBlank","hRule2_Smush","rule2Str","indexOf","hRule3_Smush","rule3Classes","r3_pos1","r3_pos2","Math","abs","substr","max","hRule4_Smush","rule4Str","r4_pos1","r4_pos2","hRule5_Smush","rule5Str","r5_pos1","r5_pos2","hRule6_Smush","vRule1_Smush","vRule2_Smush","vRule3_Smush","vRule4_Smush","vRule5_Smush","uni_Smush","canVerticalSmush","txt1","txt2","opts","fittingRules","vLayout","ii","validSmush","len","min","length","endSmush","vRule1","vRule2","vRule3","vRule4","verticallySmushLines","line1","line2","result","vRule5","padLines","lines","numSpaces","padding","smushVerticalFigLines","output","len1","len2","verticalSmush","lines1","lines2","overlap","line","piece3","piece1","slice","piece2_1","piece2_2","piece2","push","concat","getVerticalSmushDist","curDist","maxDist","subLines1","subLines2","slen","ret","getHorizontalSmushLength","hLayout","seg1","seg2","breakAfter","distCal","hRule1","hRule2","hRule3","hRule4","hRule5","hRule6","horizontalSmush","textBlock1","textBlock2","jj","overlapStart","outputFig","height","nextCh","newFigChar","outputFigText","row","joinFigArray","array","reduce","acc","data","fig","breakWord","figChars","i","w","figLinesWidth","width","chars","generateFigTextLines","txt","charIndex","figChar","maxWidth","nextFigChars","char","isSpace","textFigWord","textFigLine","tmpBreak","outputFigLines","figWords","whitespaceBreak","printDirection","split","reverse","join","match","charCodeAt","showHardBlanks","forEach","replace","RegExp","getHorizontalFittingRules","layout","options","props","params","getVerticalFittingRules","textLines","apply","map","generateText","fontName","figLines","me","next","text","_reworkFontOpts","fontOpts","myOpts","prop","JSON","parse","stringify","horizontalLayout","verticalLayout","arguments","loadFont","err","textSync","loadFontSync","metadata","comment","defaults","hasOwnProperty","parseFont","headerData","splice","figFont","parseInt","baseline","maxLength","oldLayout","numCommentLines","fullLayout","codeTagCount","getSmushingRules","newLayout","rules","val","index","code","codes","isNaN","Error","charNums","cNum","endCharRegEx","parseError","numChars","test","console","log","fetch","error","then","response","ok","catch","name","preloadFonts","fonts","fontData","promise","Promise","resolve","res","module","exports","require","fs","path","fontDir","__dirname","readFile","encoding","readFileSync","fontList","readdir","files","file","fontsSync","readdirSync","cssKeywords","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","defineProperty","value","comparativeDistance","x","y","r","g","b","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","k","reversed","currentClosestDistance","currentClosestKeyword","Infinity","distance","z","t2","t3","t1","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","args","saturation","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","colorString","chroma","grayscale","hue","pure","mg","conversions","buildGraph","graph","models","parent","deriveBFS","fromModel","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","toModel","fn","cur","conversion","route","wrapRaw","wrappedFn","arg0","wrapRounded","routes","raw","wrapAnsi16","offset","wrapAnsi256","wrapAnsi16m","ansi2ansi","rgb2rgb","setLazyProperty","object","property","get","enumerable","configurable","colorConvert","makeDynamicStyles","wrap","targetSpace","identity","isBackground","undefined","styles","sourceSpace","suite","entries","assembleStyles","Map","modifier","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","bgGray","grey","bgGrey","groupName","group","styleName","style","open","close","set","flag","argv","process","prefix","startsWith","position","terminatorPosition","os","tty","hasFlag","env","forceColor","translateLevel","level","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","TERM","platform","osRelease","release","Number","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","stream","isTTY","FORCE_COLOR","stdout","isatty","stderr","stringReplaceAll","replacer","substringLength","endIndex","returnValue","stringEncaseCRLFWithFirstIndex","postfix","gotCR","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","u","bracket","String","fromCharCode","fromCodePoint","parseArguments","arguments_","results","chunks","trim","matches","chunk","number","escape","character","parseStyle","lastIndex","exec","buildStyle","chalk","enabled","layer","Array","isArray","temporary","escapeCharacter","errMessage","ansiStyles","stdoutColor","stderrColor","levelMapping","create","applyOptions","isInteger","colorLevel","ChalkClass","constructor","chalkFactory","template","chalkTag","setPrototypeOf","Chalk","prototype","Instance","builder","createBuilder","createStyler","_styler","_isEmpty","visible","usedModels","styler","proto","defineProperties","_generator","openAll","closeAll","self","applyStyle","lfIndex","strings","firstString","parts","normalMsg","msg","errorMsg","infoMsg","getCurrentDir","basename","cwd","dirExists","fpath","existsSync","sendCliHeading","figStandard"],"mappings":"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","file":"vaq.js","sourceRoot":"../src","sourcesContent":["/*\n    FIGlet.js (a FIGDriver for FIGlet fonts)\n    By Patrick Gillespie (patorjk@gmail.com)\n    Originally Written For: http://patorjk.com/software/taag/\n    License: MIT (with this header staying intact)\n\n    This JavaScript code aims to fully implement the FIGlet spec.\n    Full FIGlet spec: http://patorjk.com/software/taag/docs/figfont.txt\n\n    FIGlet fonts are actually kind of complex, which is why you will see\n    a lot of code about parsing and interpreting rules. The actual generation\n    code is pretty simple and is done near the bottom of the code.\n*/\n\n\"use strict\";\n\nvar figlet = figlet || (function() {\n\n    // ---------------------------------------------------------------------\n    // Private static variables\n\n    var FULL_WIDTH = 0,\n        FITTING = 1,\n        SMUSHING = 2,\n        CONTROLLED_SMUSHING = 3;\n\n    // ---------------------------------------------------------------------\n    // Variable that will hold information about the fonts\n\n    var figFonts = {}; // What stores all of the FIGlet font data\n    var figDefaults = {\n        font: 'Standard',\n        fontPath: './fonts'\n    };\n\n    // ---------------------------------------------------------------------\n    // Private static methods\n\n    /*\n        This method takes in the oldLayout and newLayout data from the FIGfont header file and returns\n        the layout information.\n    */\n    function getSmushingRules(oldLayout, newLayout) {\n        var rules = {};\n        var val, index, len, code;\n        var codes = [[16384,\"vLayout\",SMUSHING], [8192,\"vLayout\",FITTING], [4096, \"vRule5\", true], [2048, \"vRule4\", true],\n                     [1024, \"vRule3\", true], [512, \"vRule2\", true], [256, \"vRule1\", true], [128, \"hLayout\", SMUSHING],\n                     [64, \"hLayout\", FITTING], [32, \"hRule6\", true], [16, \"hRule5\", true], [8, \"hRule4\", true], [4, \"hRule3\", true],\n                     [2, \"hRule2\", true], [1, \"hRule1\", true]];\n\n        val = (newLayout !== null) ? newLayout : oldLayout;\n        index = 0;\n        len = codes.length;\n        while ( index < len ) {\n            code = codes[index];\n            if (val >= code[0]) {\n                val = val - code[0];\n                rules[code[1]] = (typeof rules[code[1]] === \"undefined\") ? code[2] : rules[code[1]];\n            } else if (code[1] !== \"vLayout\" && code[1] !== \"hLayout\") {\n                rules[code[1]] = false;\n            }\n            index++;\n        }\n\n        if (typeof rules[\"hLayout\"] === \"undefined\") {\n            if (oldLayout === 0) {\n                rules[\"hLayout\"] = FITTING;\n            } else if (oldLayout === -1) {\n                rules[\"hLayout\"] = FULL_WIDTH;\n            } else {\n                if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] ||rules[\"hRule5\"] || rules[\"hRule6\"] ) {\n                    rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n                } else {\n                    rules[\"hLayout\"] = SMUSHING;\n                }\n            }\n        } else if (rules[\"hLayout\"] === SMUSHING) {\n            if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] ||rules[\"hRule5\"] || rules[\"hRule6\"] ) {\n                rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        if (typeof rules[\"vLayout\"] === \"undefined\") {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] ||rules[\"vRule5\"]  ) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            } else {\n                rules[\"vLayout\"] = FULL_WIDTH;\n            }\n        } else if (rules[\"vLayout\"] === SMUSHING) {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] ||rules[\"vRule5\"]  ) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        return rules;\n    }\n\n    /* The [vh]Rule[1-6]_Smush functions return the smushed character OR false if the two characters can't be smushed */\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 1)\n\n            Two sub-characters are smushed into a single sub-character\n            if they are the same.  This rule does not smush\n            hardblanks.  (See rule 6 on hardblanks below)\n    */\n    function hRule1_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === ch2 && ch1 !== hardBlank) {return ch1;}\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 2)\n\n            An underscore (\"_\") will be replaced by any of: \"|\", \"/\",\n            \"\\\", \"[\", \"]\", \"{\", \"}\", \"(\", \")\", \"<\" or \">\".\n    */\n    function hRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {return ch2;}\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {return ch1;}\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 4)\n\n            A hierarchy of six classes is used: \"|\", \"/\\\", \"[]\", \"{}\",\n            \"()\", and \"<>\".  When two smushing sub-characters are\n            from different classes, the one from the latter class\n            will be used.\n    */\n    function hRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1-r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1,r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: OPPOSITE PAIR SMUSHING (code value 8)\n\n            Smushes opposing brackets (\"[]\" or \"][\"), braces (\"{}\" or\n            \"}{\") and parentheses (\"()\" or \")(\") together, replacing\n            any such pair with a vertical bar (\"|\").\n    */\n    function hRule4_Smush(ch1, ch2) {\n        var rule4Str = \"[] {} ()\";\n        var r4_pos1 = rule4Str.indexOf(ch1);\n        var r4_pos2 = rule4Str.indexOf(ch2);\n        if (r4_pos1 !== -1 && r4_pos2 !== -1) {\n            if (Math.abs(r4_pos1-r4_pos2) <= 1) {\n                return \"|\";\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: BIG X SMUSHING (code value 16)\n\n            Smushes \"/\\\" into \"|\", \"\\/\" into \"Y\", and \"><\" into \"X\".\n            Note that \"<>\" is not smushed in any way by this rule.\n            The name \"BIG X\" is historical; originally all three pairs\n            were smushed into \"X\".\n    */\n    function hRule5_Smush(ch1, ch2) {\n        var rule5Str = \"/\\\\ \\\\/ ><\";\n        var rule5Hash = {\"0\": \"|\", \"3\": \"Y\", \"6\": \"X\"};\n        var r5_pos1 = rule5Str.indexOf(ch1);\n        var r5_pos2 = rule5Str.indexOf(ch2);\n        if (r5_pos1 !== -1 && r5_pos2 !== -1) {\n            if ((r5_pos2-r5_pos1) === 1) {\n                return rule5Hash[r5_pos1];\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 6: HARDBLANK SMUSHING (code value 32)\n\n            Smushes two hardblanks together, replacing them with a\n            single hardblank.  (See \"Hardblanks\" below.)\n    */\n    function hRule6_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === hardBlank && ch2 === hardBlank) {\n            return hardBlank;\n        }\n        return false;\n    }\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 256)\n\n            Same as horizontal smushing rule 1.\n    */\n    function vRule1_Smush(ch1, ch2) {\n        if (ch1 === ch2) {return ch1;}\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 512)\n\n            Same as horizontal smushing rule 2.\n    */\n    function vRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {return ch2;}\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {return ch1;}\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 1024)\n\n            Same as horizontal smushing rule 3.\n    */\n    function vRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1-r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1,r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: HORIZONTAL LINE SMUSHING (code value 2048)\n\n            Smushes stacked pairs of \"-\" and \"_\", replacing them with\n            a single \"=\" sub-character.  It does not matter which is\n            found above the other.  Note that vertical smushing rule 1\n            will smush IDENTICAL pairs of horizontal lines, while this\n            rule smushes horizontal lines consisting of DIFFERENT\n            sub-characters.\n    */\n    function vRule4_Smush(ch1, ch2) {\n        if ( (ch1 === \"-\" && ch2 === \"_\") || (ch1 === \"_\" && ch2 === \"-\") ) {\n            return \"=\";\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: VERTICAL LINE SUPERSMUSHING (code value 4096)\n\n            This one rule is different from all others, in that it\n            \"supersmushes\" vertical lines consisting of several\n            vertical bars (\"|\").  This creates the illusion that\n            FIGcharacters have slid vertically against each other.\n            Supersmushing continues until any sub-characters other\n            than \"|\" would have to be smushed.  Supersmushing can\n            produce impressive results, but it is seldom possible,\n            since other sub-characters would usually have to be\n            considered for smushing as soon as any such stacked\n            vertical lines are encountered.\n    */\n    function vRule5_Smush(ch1, ch2) {\n        if ( ch1 === \"|\" && ch2 === \"|\" ) {\n            return \"|\";\n        }\n        return false;\n    }\n\n    /*\n        Universal smushing simply overrides the sub-character from the\n        earlier FIGcharacter with the sub-character from the later\n        FIGcharacter.  This produces an \"overlapping\" effect with some\n        FIGfonts, wherin the latter FIGcharacter may appear to be \"in\n        front\".\n    */\n    function uni_Smush(ch1, ch2, hardBlank) {\n        if (ch2 === \" \" || ch2 === \"\") {\n            return ch1;\n        } else if (ch2 === hardBlank && ch1 !== \" \") {\n            return ch1;\n        } else {\n            return ch2;\n        }\n    }\n\n    // --------------------------------------------------------------------------\n    // main vertical smush routines (excluding rules)\n\n    /*\n        txt1 - A line of text\n        txt2 - A line of text\n        opts - FIGlet options array\n\n        About: Takes in two lines of text and returns one of the following:\n        \"valid\" - These lines can be smushed together given the current smushing rules\n        \"end\" - The lines can be smushed, but we're at a stopping point\n        \"invalid\" - The two lines cannot be smushed together\n    */\n    function canVerticalSmush(txt1, txt2, opts) {\n        if (opts.fittingRules.vLayout === FULL_WIDTH) {return \"invalid\";}\n        var ii, len = Math.min(txt1.length, txt2.length);\n        var ch1, ch2, endSmush = false, validSmush;\n        if (len===0) {return \"invalid\";}\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = txt1.substr(ii,1);\n            ch2 = txt2.substr(ii,1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    return \"invalid\";\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    return \"end\";\n                } else {\n                    if (vRule5_Smush(ch1,ch2)) {endSmush = endSmush || false; continue;} // rule 5 allow for \"super\" smushing, but only if we're not already ending this smush\n                    validSmush = false;\n                    validSmush = (opts.fittingRules.vRule1) ? vRule1_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule2) ? vRule2_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule3) ? vRule3_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule4) ? vRule4_Smush(ch1,ch2) : validSmush;\n                    endSmush = true;\n                    if (!validSmush) {return \"invalid\";}\n                }\n            }\n        }\n        if (endSmush) {\n            return \"end\";\n        } else {\n            return \"valid\";\n        }\n    }\n\n    function getVerticalSmushDist(lines1, lines2, opts) {\n        var maxDist = lines1.length;\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var subLines1, subLines2, slen;\n        var curDist = 1;\n        var ii, ret, result;\n        while (curDist <= maxDist) {\n\n            subLines1 = lines1.slice(Math.max(0,len1-curDist), len1);\n            subLines2 = lines2.slice(0, Math.min(maxDist, curDist));\n\n            slen = subLines2.length;//TODO:check this\n            result = \"\";\n            for (ii = 0; ii < slen; ii++) {\n                ret = canVerticalSmush(subLines1[ii], subLines2[ii], opts);\n                if (ret === \"end\") {\n                    result = ret;\n                } else if (ret === \"invalid\") {\n                    result = ret;\n                    break;\n                } else {\n                    if (result === \"\") {\n                        result = \"valid\";\n                    }\n                }\n            }\n\n            if (result === \"invalid\") {curDist--;break;}\n            if (result === \"end\") {break;}\n            if (result === \"valid\") {curDist++;}\n        }\n\n        return Math.min(maxDist,curDist);\n    }\n\n    function verticallySmushLines(line1, line2, opts) {\n        var ii, len = Math.min(line1.length, line2.length);\n        var ch1, ch2, result = \"\", validSmush;\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = line1.substr(ii,1);\n            ch2 = line2.substr(ii,1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    result += uni_Smush(ch1,ch2);\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    result += uni_Smush(ch1,ch2);\n                } else {\n                    validSmush = (opts.fittingRules.vRule5) ? vRule5_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule1) ? vRule1_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule2) ? vRule2_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule3) ? vRule3_Smush(ch1,ch2) : validSmush;\n                    validSmush = (!validSmush && opts.fittingRules.vRule4) ? vRule4_Smush(ch1,ch2) : validSmush;\n                    result += validSmush;\n                }\n            } else {\n                result += uni_Smush(ch1,ch2);\n            }\n        }\n        return result;\n    }\n\n    function verticalSmush(lines1, lines2, overlap, opts) {\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var piece1 = lines1.slice(0, Math.max(0,len1-overlap));\n        var piece2_1 = lines1.slice(Math.max(0,len1-overlap), len1);\n        var piece2_2 = lines2.slice(0, Math.min(overlap, len2));\n        var ii, len, line, piece2 = [], piece3, result = [];\n\n        len = piece2_1.length;\n        for (ii = 0; ii < len; ii++) {\n            if (ii >= len2) {\n                line = piece2_1[ii];\n            } else {\n                line = verticallySmushLines(piece2_1[ii], piece2_2[ii], opts);\n            }\n            piece2.push(line);\n        }\n\n        piece3 = lines2.slice(Math.min(overlap,len2), len2);\n\n        return result.concat(piece1,piece2,piece3);\n    }\n\n    function padLines(lines, numSpaces) {\n        var ii, len = lines.length, padding = \"\";\n        for (ii = 0; ii < numSpaces; ii++) {\n            padding += \" \";\n        }\n        for (ii = 0; ii < len; ii++) {\n            lines[ii] += padding;\n        }\n    }\n\n    function smushVerticalFigLines(output, lines, opts) {\n        var len1 = output[0].length;\n        var len2 = lines[0].length;\n        var overlap;\n        if (len1 > len2) {\n            padLines(lines, len1-len2);\n        } else if (len2 > len1) {\n            padLines(output, len2-len1);\n        }\n        overlap = getVerticalSmushDist(output, lines, opts);\n        return verticalSmush(output, lines, overlap,opts);\n    }\n\n    // -------------------------------------------------------------------------\n    // Main horizontal smush routines (excluding rules)\n\n    function getHorizontalSmushLength(txt1, txt2, opts) {\n        if (opts.fittingRules.hLayout === FULL_WIDTH) {return 0;}\n        var ii, len1 = txt1.length, len2 = txt2.length;\n        var maxDist = len1;\n        var curDist = 1;\n        var breakAfter = false;\n        var validSmush = false;\n        var seg1, seg2, ch1, ch2;\n        if (len1 === 0) {return 0;}\n\n        distCal: while (curDist <= maxDist) {\n            seg1 = txt1.substr(len1-curDist,curDist);\n            seg2 = txt2.substr(0,Math.min(curDist,len2));\n            for (ii = 0; ii < Math.min(curDist,len2); ii++) {\n                ch1 = seg1.substr(ii,1);\n                ch2 = seg2.substr(ii,1);\n                if (ch1 !== \" \" && ch2 !== \" \" ) {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        curDist = curDist - 1;\n                        break distCal;\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        if (ch1 === opts.hardBlank || ch2 === opts.hardBlank) {\n                            curDist = curDist - 1; // universal smushing does not smush hardblanks\n                        }\n                        break distCal;\n                    } else {\n                        breakAfter = true; // we know we need to break, but we need to check if our smushing rules will allow us to smush the overlapped characters\n                        validSmush = false; // the below checks will let us know if we can smush these characters\n\n                        validSmush = (opts.fittingRules.hRule1) ? hRule1_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule2) ? hRule2_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule3) ? hRule3_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule4) ? hRule4_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule5) ? hRule5_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n                        validSmush = (!validSmush && opts.fittingRules.hRule6) ? hRule6_Smush(ch1,ch2,opts.hardBlank) : validSmush;\n\n                        if (!validSmush) {\n                            curDist = curDist - 1;\n                            break distCal;\n                        }\n                    }\n                }\n            }\n            if (breakAfter) {break;}\n            curDist++;\n        }\n        return Math.min(maxDist,curDist);\n    }\n\n    function horizontalSmush(textBlock1, textBlock2, overlap, opts) {\n        var ii, jj, ch, outputFig = [],\n            overlapStart,piece1,piece2,piece3,len1,len2,txt1,txt2;\n\n        for (ii = 0; ii < opts.height; ii++) {\n            txt1 = textBlock1[ii];\n            txt2 = textBlock2[ii];\n            len1 = txt1.length;\n            len2 = txt2.length;\n            overlapStart = len1-overlap;\n            piece1 = txt1.substr(0,Math.max(0,overlapStart));\n            piece2 = \"\";\n\n            // determine overlap piece\n            var seg1 = txt1.substr(Math.max(0,len1-overlap),overlap);\n            var seg2 = txt2.substr(0,Math.min(overlap,len2));\n\n            for (jj = 0; jj < overlap; jj++) {\n                var ch1 = (jj < len1) ? seg1.substr(jj,1) : \" \";\n                var ch2 = (jj < len2) ? seg2.substr(jj,1) : \" \";\n\n                if (ch1 !== \" \" && ch2 !== \" \") {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else {\n                        // Controlled Smushing\n                        var nextCh = \"\";\n                        nextCh = (!nextCh && opts.fittingRules.hRule1) ? hRule1_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule2) ? hRule2_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule3) ? hRule3_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule4) ? hRule4_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule5) ? hRule5_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = (!nextCh && opts.fittingRules.hRule6) ? hRule6_Smush(ch1,ch2,opts.hardBlank) : nextCh;\n                        nextCh = nextCh || uni_Smush(ch1, ch2, opts.hardBlank);\n                        piece2 += nextCh;\n                    }\n                } else {\n                    piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                }\n            }\n\n            if (overlap >= len2) {\n                piece3 = \"\";\n            } else {\n                piece3 = txt2.substr(overlap,Math.max(0,len2-overlap));\n            }\n            outputFig[ii] = piece1 + piece2 + piece3;\n        }\n        return outputFig;\n    }\n\n    /*\n        Creates new empty ASCII placeholder of give len\n        - len - number\n    */\n    function newFigChar(len) {\n        var outputFigText = [], row;\n        for (row = 0; row < len; row++) {\n            outputFigText[row] = \"\";\n        }\n        return outputFigText;\n    }\n\n    /*\n       join words or single characaters into single Fig line\n       - array - array of ASCII words or single characters: {fig: array, overlap: number}\n       - len - height of the Characters (number of rows)\n       - opt - options object\n    */\n    function joinFigArray(array, len, opts) {\n        return array.reduce(function(acc, data) {\n            return horizontalSmush(acc, data.fig, data.overlap, opts);\n        }, newFigChar(len));\n    }\n\n    /*\n       break long word return leftover characters and line before the break\n       - figChars - list of single ASCII characters in form {fig, overlap}\n       - len - number of rows\n       - opt - options object\n    */\n    function breakWord(figChars, len, opts) {\n        var result = {};\n        for (var i = figChars.length; --i;) {\n            var w = joinFigArray(figChars.slice(0, i), len, opts);\n            if (figLinesWidth(w) <= opts.width) {\n                result.outputFigText = w;\n                if (i < figChars.length) {\n                    result.chars = figChars.slice(i);\n                } else {\n                    result.chars = [];\n                }\n                break;\n            }\n        }\n        return result;\n    }\n\n    function generateFigTextLines(txt, figChars, opts) {\n        var charIndex, figChar, spaceIndex, overlap = 0, row, outputFigText, len, height=opts.height, outputFigLines = [], maxWidth, prevWidth, nextFigChars, figWords = [], char, isSpace, textFigWord, textFigLine, tmpBreak;\n\n        outputFigText = newFigChar(height);\n        if (opts.width > 0 && opts.whitespaceBreak) {\n            // list of characters is used to break in the middle of the word when word is logner\n            // chars is array of characters with {fig, overlap} and overlap is for whole word\n            nextFigChars = {\n                chars: [],\n                overlap: overlap\n            };\n        }\n        if (opts.printDirection === 1) {\n            txt = txt.split('').reverse().join('');\n        }\n        len = txt.length;\n        for (charIndex = 0; charIndex < len; charIndex++) {\n            char = txt.substr(charIndex, 1);\n            isSpace = char.match(/\\s/);\n            figChar = figChars[char.charCodeAt(0)];\n            textFigLine = null;\n            if (figChar) {\n                if (opts.fittingRules.hLayout !== FULL_WIDTH) {\n                    overlap = 10000;// a value too high to be the overlap\n                    for (row = 0; row < opts.height; row++) {\n                        overlap = Math.min(overlap, getHorizontalSmushLength(outputFigText[row], figChar[row], opts));\n                    }\n                    overlap = (overlap === 10000) ? 0 : overlap;\n                }\n                if (opts.width > 0) {\n                    if (opts.whitespaceBreak) {\n                        // next character in last word (figChars have same data as words)\n                        textFigWord = joinFigArray(nextFigChars.chars.concat([{\n                            fig: figChar, overlap: overlap\n                        }]), height, opts);\n                        textFigLine = joinFigArray(figWords.concat([{\n                            fig: textFigWord, overlap: nextFigChars.overlap\n                        }]), height, opts);\n                        maxWidth = figLinesWidth(textFigLine);\n                    } else {\n                        textFigLine = horizontalSmush(outputFigText, figChar, overlap, opts);\n                        maxWidth = figLinesWidth(textFigLine);\n                    }\n                    if (maxWidth >= opts.width && charIndex > 0) {\n                        if (opts.whitespaceBreak) {\n                            outputFigText = joinFigArray(figWords.slice(0, -1), height, opts);\n                            if (figWords.length > 1) {\n                                outputFigLines.push(outputFigText);\n                                outputFigText = newFigChar(height);\n                            }\n                            figWords = [];\n                        } else {\n                            outputFigLines.push(outputFigText);\n                            outputFigText = newFigChar(height);\n                        }\n                    }\n                }\n                if (opts.width > 0 && opts.whitespaceBreak) {\n                    if (!isSpace || charIndex === len - 1) {\n                        nextFigChars.chars.push({fig: figChar, overlap: overlap});\n                    }\n                    if (isSpace || charIndex === len - 1) {\n                        // break long words\n                        tmpBreak = null;\n                        while (true) {\n                            textFigLine = joinFigArray(nextFigChars.chars, height, opts);\n                            maxWidth = figLinesWidth(textFigLine);\n                            if (maxWidth >= opts.width) {\n                                tmpBreak = breakWord(nextFigChars.chars, height, opts);\n                                nextFigChars = { chars: tmpBreak.chars };\n                                outputFigLines.push(tmpBreak.outputFigText);\n                            } else {\n                                break;\n                            }\n                        }\n                        // any leftovers\n                        if (maxWidth > 0) {\n                            if (tmpBreak) {\n                                figWords.push({fig: textFigLine, overlap: 1});\n                            } else {\n                                figWords.push({\n                                    fig: textFigLine,\n                                    overlap: nextFigChars.overlap\n                                });\n                            }\n                        }\n                        // save space character and current overlap for smush in joinFigWords\n                        if (isSpace) {\n                            figWords.push({fig: figChar, overlap: overlap});\n                            outputFigText = newFigChar(height);\n                        }\n                        if (charIndex === len - 1) {\n                            // last line\n                            outputFigText = joinFigArray(figWords, height, opts);\n                        }\n                        nextFigChars = {\n                            chars: [],\n                            overlap: overlap\n                        };\n                        continue;\n                    }\n                }\n                outputFigText = horizontalSmush(outputFigText, figChar, overlap, opts);\n            }\n        }\n        // special case when last line would be empty\n        // this may happen if text fit exactly opt.width\n        if (figLinesWidth(outputFigText) > 0) {\n            outputFigLines.push(outputFigText);\n        }\n        // remove hardblanks\n        if (opts.showHardBlanks !== true) {\n            outputFigLines.forEach(function(outputFigText) {\n                len = outputFigText.length;\n                for (row = 0; row < len; row++) {\n                    outputFigText[row] = outputFigText[row].replace(new RegExp(\"\\\\\"+opts.hardBlank,\"g\"),\" \");\n                }\n            });\n        }\n        return outputFigLines;\n    }\n\n    // -------------------------------------------------------------------------\n    // Parsing and Generation methods\n\n    var getHorizontalFittingRules = function(layout, options) {\n        var props = [\"hLayout\", \"hRule1\",\"hRule2\",\"hRule3\",\"hRule4\",\"hRule5\",\"hRule6\"],\n            params = {}, prop, ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = {\"hLayout\": FULL_WIDTH,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else if (layout === \"fitted\") {\n            params = {\"hLayout\": FITTING,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else if (layout === \"controlled smushing\") {\n            params = {\"hLayout\": CONTROLLED_SMUSHING,\"hRule1\":true,\"hRule2\":true,\"hRule3\":true,\"hRule4\":true,\"hRule5\":true,\"hRule6\":true};\n        } else if (layout === \"universal smushing\") {\n            params = {\"hLayout\": SMUSHING,\"hRule1\":false,\"hRule2\":false,\"hRule3\":false,\"hRule4\":false,\"hRule5\":false,\"hRule6\":false};\n        } else {\n            return;\n        }\n        return params;\n    };\n\n    var getVerticalFittingRules = function(layout, options) {\n        var props = [\"vLayout\", \"vRule1\",\"vRule2\",\"vRule3\",\"vRule4\",\"vRule5\"],\n            params = {}, prop, ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = {\"vLayout\": FULL_WIDTH,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else if (layout === \"fitted\") {\n            params = {\"vLayout\": FITTING,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else if (layout === \"controlled smushing\") {\n            params = {\"vLayout\": CONTROLLED_SMUSHING,\"vRule1\":true,\"vRule2\":true,\"vRule3\":true,\"vRule4\":true,\"vRule5\":true};\n        } else if (layout === \"universal smushing\") {\n            params = {\"vLayout\": SMUSHING,\"vRule1\":false,\"vRule2\":false,\"vRule3\":false,\"vRule4\":false,\"vRule5\":false};\n        } else {\n            return;\n        }\n        return params;\n    };\n    /*\n        Return max line of the ASCII Art\n        - text is array of lines for text\n        - char is next character\n     */\n    var figLinesWidth = function(textLines) {\n        return Math.max.apply(Math, textLines.map(function(line, i) {\n            return line.length;\n        }));\n    };\n\n    /*\n        Generates the ASCII Art\n        - fontName: Font to use\n        - option: Options to override the defaults\n        - txt: The text to make into ASCII Art\n    */\n    var generateText = function(fontName, options, txt) {\n        txt = txt.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n        var lines = txt.split(\"\\n\");\n        var figLines = [];\n        var ii, len, output;\n        len = lines.length;\n        for (ii = 0; ii < len; ii++) {\n            figLines = figLines.concat( generateFigTextLines(lines[ii], figFonts[fontName], options) );\n        }\n        len = figLines.length;\n        output = figLines[0];\n        for (ii = 1; ii < len; ii++) {\n            output = smushVerticalFigLines(output, figLines[ii], options);\n        }\n\n        return output ? output.join(\"\\n\") : '';\n    };\n\n    // -------------------------------------------------------------------------\n    // Public methods\n\n    /*\n        A short-cut for the figlet.text method\n\n        Parameters:\n        - txt (string): The text to make into ASCII Art\n        - options (object/string - optional): Options that will override the current font's default options.\n          If a string is provided instead of an object, it is assumed to be the font name.\n\n            * font\n            * horizontalLayout\n            * verticalLayout\n            * showHardBlanks - Wont remove hardblank characters\n\n        - next (function): A callback function, it will contained the outputted ASCII Art.\n    */\n    var me = function(txt, options, next) {\n        me.text(txt, options, next);\n    };\n    me.text = function(txt, options, next) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof arguments[1] === 'function') {\n            next = options;\n            options = {};\n            options.font = figDefaults.font; // default font\n        }\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function(err, fontOpts) {\n            if (err) {\n                return next(err);\n            }\n\n            next(null, generateText(fontName, _reworkFontOpts(fontOpts, options), txt));\n        });\n    };\n\n    /*\n        Synchronous version of figlet.text.\n        Accepts the same parameters.\n     */\n    me.textSync = function(txt, options) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        var fontOpts = _reworkFontOpts(me.loadFontSync(fontName), options);\n        return generateText(fontName, fontOpts, txt);\n    };\n\n    /*\n      takes assigned options and merges them with the default options from the choosen font\n     */\n    function _reworkFontOpts(fontOpts, options) {\n        var myOpts = JSON.parse(JSON.stringify(fontOpts)), // make a copy because we may edit this (see below)\n            params,\n            prop;\n\n        /*\n         If the user is chosing to use a specific type of layout (e.g., 'full', 'fitted', etc etc)\n         Then we need to override the default font options.\n         */\n        if (typeof options.horizontalLayout !== 'undefined') {\n            params = getHorizontalFittingRules(options.horizontalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        if (typeof options.verticalLayout !== 'undefined') {\n            params = getVerticalFittingRules(options.verticalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        myOpts.printDirection = (typeof options.printDirection !== 'undefined') ? options.printDirection : fontOpts.printDirection;\n        myOpts.showHardBlanks = options.showHardBlanks || false;\n        myOpts.width = options.width || -1;\n        myOpts.whitespaceBreak = options.whitespaceBreak || false;\n\n        return myOpts;\n    }\n\n    /*\n        Returns metadata about a specfic FIGlet font.\n\n        Returns:\n            next(err, options, headerComment)\n            - err: The error if an error occurred, otherwise null/falsey.\n            - options (object): The options defined for the font.\n            - headerComment (string): The font's header comment.\n    */\n    me.metadata = function(fontName, next) {\n        fontName = fontName + '';\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function(err, fontOpts) {\n            if (err) {\n                next(err);\n                return;\n            }\n\n            next(null, fontOpts, figFonts[fontName].comment);\n        });\n    };\n\n    /*\n        Allows you to override defaults. See the definition of the figDefaults object up above\n        to see what properties can be overridden.\n        Returns the options for the font.\n    */\n    me.defaults = function(opts) {\n        if (typeof opts === 'object' && opts !== null) {\n            for (var prop in opts) {\n                if (opts.hasOwnProperty(prop)) {\n                    figDefaults[prop] = opts[prop];\n                }\n            }\n        }\n        return JSON.parse(JSON.stringify(figDefaults));\n    };\n\n    /*\n        Parses data from a FIGlet font file and places it into the figFonts object.\n    */\n    me.parseFont = function(fontName, data) {\n        data = data.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n        figFonts[fontName] = {};\n\n        var lines = data.split(\"\\n\");\n        var headerData = lines.splice(0,1)[0].split(\" \");\n        var figFont = figFonts[fontName];\n        var opts = {};\n\n        opts.hardBlank = headerData[0].substr(5,1);\n        opts.height = parseInt(headerData[1], 10);\n        opts.baseline = parseInt(headerData[2], 10);\n        opts.maxLength = parseInt(headerData[3], 10);\n        opts.oldLayout = parseInt(headerData[4], 10);\n        opts.numCommentLines = parseInt(headerData[5], 10);\n        opts.printDirection = (headerData.length >= 6) ? parseInt(headerData[6], 10) : 0;\n        opts.fullLayout = (headerData.length >= 7) ? parseInt(headerData[7], 10) : null;\n        opts.codeTagCount = (headerData.length >= 8) ? parseInt(headerData[8], 10) : null;\n        opts.fittingRules = getSmushingRules(opts.oldLayout, opts.fullLayout);\n\n        figFont.options = opts;\n\n        // error check\n        if (opts.hardBlank.length !== 1 ||\n            isNaN(opts.height) ||\n            isNaN(opts.baseline) ||\n            isNaN(opts.maxLength) ||\n            isNaN(opts.oldLayout) ||\n            isNaN(opts.numCommentLines) )\n        {\n            throw new Error('FIGlet header contains invalid values.');\n        }\n\n        /*\n            All FIGlet fonts must contain chars 32-126, 196, 214, 220, 228, 246, 252, 223\n        */\n\n        var charNums = [], ii;\n        for (ii = 32; ii <= 126; ii++) {\n            charNums.push(ii);\n        }\n        charNums = charNums.concat(196, 214, 220, 228, 246, 252, 223);\n\n        // error check - validate that there are enough lines in the file\n        if (lines.length < (opts.numCommentLines + (opts.height * charNums.length)) ) {\n            throw new Error('FIGlet file is missing data.');\n        }\n\n        /*\n            Parse out the context of the file and put it into our figFont object\n        */\n\n        var cNum, endCharRegEx, parseError = false;\n\n        figFont.comment = lines.splice(0,opts.numCommentLines).join(\"\\n\");\n        figFont.numChars = 0;\n\n        while (lines.length > 0 && figFont.numChars < charNums.length) {\n            cNum = charNums[figFont.numChars];\n            figFont[cNum] = lines.splice(0,opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\"+figFont[cNum][ii].substr(figFont[cNum][ii].length-1,1)+\"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx,\"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        /*\n            Now we check to see if any additional characters are present\n        */\n\n        while (lines.length > 0) {\n            cNum = lines.splice(0,1)[0].split(\" \")[0];\n            if ( /^0[xX][0-9a-fA-F]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 16);\n            } else if ( /^0[0-7]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 8);\n            } else if ( /^[0-9]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 10);\n            } else if ( /^-0[xX][0-9a-fA-F]+$/.test(cNum) ) {\n                cNum = parseInt(cNum, 16);\n            } else {\n                if (cNum === \"\") {break;}\n                // something's wrong\n                console.log(\"Invalid data:\"+cNum);\n                parseError = true;\n                break;\n            }\n\n            figFont[cNum] = lines.splice(0,opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\"+figFont[cNum][ii].substr(figFont[cNum][ii].length-1,1)+\"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx,\"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        // error check\n        if (parseError === true) {\n            throw new Error('Error parsing data.');\n        }\n\n        return opts;\n    };\n\n    /*\n        Loads a font.\n    */\n    me.loadFont = function(fontName, next) {\n        if (figFonts[fontName]) {\n            next(null, figFonts[fontName].options);\n            return;\n        }\n\n        if (typeof fetch !== 'function') {\n          console.error('figlet.js requires the fetch API or a fetch polyfill such as https://cdnjs.com/libraries/fetch');\n          throw new Error('fetch is required for figlet.js to work.')\n        }\n\n        fetch(figDefaults.fontPath + '/' + fontName + '.flf')\n            .then(function(response) {\n                if(response.ok) {\n                    return response.text();\n                }\n\n                console.log('Unexpected response', response);\n                throw new Error('Network response was not ok.');\n            })\n            .then(function(text) {\n                next(null, me.parseFont(fontName, text));\n            })\n            .catch(next);\n    };\n\n    /*\n        loads a font synchronously, not implemented for the browser\n     */\n    me.loadFontSync = function(name) {\n        if (figFonts[name]) {\n          return figFonts[name].options;\n        }\n        throw new Error('synchronous font loading is not implemented for the browser');\n    };\n\n    /*\n        preloads a list of fonts prior to using textSync\n        - fonts: an array of font names (i.e. [\"Standard\",\"Soft\"])\n        - next: callback function\n     */\n    me.preloadFonts = function(fonts, next) {\n        var fontData = [];\n\n        fonts.reduce(function(promise, name){\n            return promise.then(function() {\n                return fetch(figDefaults.fontPath + '/' + name + '.flf').then((response) => {\n                    return response.text();\n                }).then(function(data) {\n                    fontData.push(data);\n                });\n            });\n        }, Promise.resolve()).then(function(res){\n            for(var i in fonts){\n                me.parseFont(fonts[i], fontData[i]);\n            }\n\n            if(next)next();\n        });\n    };\n\n    me.figFonts = figFonts;\n\n    return me;\n})();\n\n// for node.js\nif (typeof module !== 'undefined') {\n    if (typeof module.exports !== 'undefined') {\n        module.exports = figlet;\n    }\n}\n","/*\n\tNode plugin for figlet.js\n*/\n\nvar figlet = require('./figlet.js'),\n    fs = require('fs'),\n    path = require('path'),\n    fontDir = path.join(__dirname, '/../fonts/');\n\n/*\n    Loads a font into the figlet object.\n\n    Parameters:\n    - name (string): Name of the font to load.\n    - next (function): Callback function.\n*/\nfiglet.loadFont = function(name, next) {\n    if (figlet.figFonts[name]) {\n        next(null, figlet.figFonts[name].options);\n        return;\n    }\n\n    fs.readFile( path.join(fontDir, name + '.flf'),  {encoding: 'utf-8'}, function(err, fontData) {\n        if (err) {\n            return next(err);\n        }\n\n        fontData = fontData + '';\n        try {\n            next(null, figlet.parseFont(name, fontData));\n        } catch(error) {\n            next(error);\n        }\n    });\n};\n\n/*\n Loads a font synchronously into the figlet object.\n\n Parameters:\n - name (string): Name of the font to load.\n */\nfiglet.loadFontSync = function(name) {\n    if (figlet.figFonts[name]) {\n        return figlet.figFonts[name].options;\n    }\n\n    var fontData = fs.readFileSync( path.join(fontDir, name + '.flf'),  {encoding: 'utf-8'});\n\n    fontData = fontData + '';\n    return figlet.parseFont(name, fontData);\n};\n\n/*\n    Returns an array containing all of the font names\n*/\nfiglet.fonts = function(next) {\n    var fontList = [];\n    fs.readdir(fontDir, function (err, files) { // '/' denotes the root folder\n        if (err) {\n            return next(err);\n        }\n\n        files.forEach( function (file) {\n            if ( /\\.flf$/.test(file) ) {\n                fontList.push( file.replace(/\\.flf$/,'') );\n            }\n        });\n\n        next(null, fontList);\n    });\n\n};\n\nfiglet.fontsSync = function() {\n    var fontList = [];\n    fs.readdirSync(fontDir).forEach(function(file) {\n        if ( /\\.flf$/.test(file) ) {\n            fontList.push( file.replace(/\\.flf$/,'') );\n        }\n    });\n\n    return fontList;\n};\n\nmodule.exports = figlet;\n","var assert = require('assert');\n\nmodule.exports = function clear(opts) {\n    if (typeof (opts) === 'boolean') {\n        opts = {\n            fullClear: opts\n        };\n    }\n\n    opts = opts || {};\n    assert(typeof (opts) === 'object', 'opts must be an object');\n\n    opts.fullClear = opts.hasOwnProperty('fullClear') ?\n        opts.fullClear : true;\n\n    assert(typeof (opts.fullClear) === 'boolean',\n        'opts.fullClear must be a boolean');\n\n    if (opts.fullClear === true) {\n        process.stdout.write('\\x1b[2J');\n    }\n\n    process.stdout.write('\\x1b[0f');\n};\n","export default `flf2a$ 6 5 16 15 13 0 24463 229\r\nStandard by Glenn Chappell & Ian Chai 3/93 -- based on Frank's .sig\r\nIncludes ISO Latin-1\r\nfiglet release 2.1 -- 12 Aug 1994\r\nModified for figlet 2.2 by John Cowan <cowan@ccil.org>\r\n  to add Latin-{2,3,4,5} support (Unicode U+0100-017F).\r\nPermission is hereby given to modify this font, as long as the\r\nmodifier's name is placed on a comment line.\r\n\r\nModified by Paul Burton <solution@earthlink.net> 12/96 to include new parameter\r\nsupported by FIGlet and FIGWin.  May also be slightly modified for better use\r\nof new full-width/kern/smush alternatives, but default output is NOT changed.\r\n\r\nFont modified May 20, 2012 by patorjk to add the 0xCA0 character\r\n $@\r\n $@\r\n $@\r\n $@\r\n $@\r\n $@@\r\n  _ @\r\n | |@\r\n | |@\r\n |_|@\r\n (_)@\r\n    @@\r\n  _ _ @\r\n ( | )@\r\n  V V @\r\n   $  @\r\n   $  @\r\n      @@\r\n    _  _   @\r\n  _| || |_ @\r\n |_  ..  _|@\r\n |_      _|@\r\n   |_||_|  @\r\n           @@\r\n   _  @\r\n  | | @\r\n / __)@\r\n \\\\__ \\\\@\r\n (   /@\r\n  |_| @@\r\n  _  __@\r\n (_)/ /@\r\n   / / @\r\n  / /_ @\r\n /_/(_)@\r\n       @@\r\n   ___   @\r\n  ( _ )  @\r\n  / _ \\\\/\\\\@\r\n | (_>  <@\r\n  \\\\___/\\\\/@\r\n         @@\r\n  _ @\r\n ( )@\r\n |/ @\r\n  $ @\r\n  $ @\r\n    @@\r\n   __@\r\n  / /@\r\n | | @\r\n | | @\r\n | | @\r\n  \\\\_\\\\@@\r\n __  @\r\n \\\\ \\\\ @\r\n  | |@\r\n  | |@\r\n  | |@\r\n /_/ @@\r\n       @\r\n __/\\\\__@\r\n \\\\    /@\r\n /_  _\\\\@\r\n   \\\\/  @\r\n       @@\r\n        @\r\n    _   @\r\n  _| |_ @\r\n |_   _|@\r\n   |_|  @\r\n        @@\r\n    @\r\n    @\r\n    @\r\n  _ @\r\n ( )@\r\n |/ @@\r\n        @\r\n        @\r\n  _____ @\r\n |_____|@\r\n    $   @\r\n        @@\r\n    @\r\n    @\r\n    @\r\n  _ @\r\n (_)@\r\n    @@\r\n     __@\r\n    / /@\r\n   / / @\r\n  / /  @\r\n /_/   @\r\n       @@\r\n   ___  @\r\n  / _ \\\\ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n  _ @\r\n / |@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n  ____  @\r\n |___ \\\\ @\r\n   __) |@\r\n  / __/ @\r\n |_____|@\r\n        @@\r\n  _____ @\r\n |___ / @\r\n   |_ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n  _  _   @\r\n | || |  @\r\n | || |_ @\r\n |__   _|@\r\n    |_|  @\r\n         @@\r\n  ____  @\r\n | ___| @\r\n |___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n   __   @\r\n  / /_  @\r\n | '_ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n  _____ @\r\n |___  |@\r\n    / / @\r\n   / /  @\r\n  /_/   @\r\n        @@\r\n   ___  @\r\n  ( _ ) @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n   ___  @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\__, |@\r\n    /_/ @\r\n        @@\r\n    @\r\n  _ @\r\n (_)@\r\n  _ @\r\n (_)@\r\n    @@\r\n    @\r\n  _ @\r\n (_)@\r\n  _ @\r\n ( )@\r\n |/ @@\r\n   __@\r\n  / /@\r\n / / @\r\n \\\\ \\\\ @\r\n  \\\\_\\\\@\r\n     @@\r\n        @\r\n  _____ @\r\n |_____|@\r\n |_____|@\r\n    $   @\r\n        @@\r\n __  @\r\n \\\\ \\\\ @\r\n  \\\\ \\\\@\r\n  / /@\r\n /_/ @\r\n     @@\r\n  ___ @\r\n |__ \\\\@\r\n   / /@\r\n  |_| @\r\n  (_) @\r\n      @@\r\n    ____  @\r\n   / __ \\\\ @\r\n  / / _\\` |@\r\n | | (_| |@\r\n  \\\\ \\\\__,_|@\r\n   \\\\____/ @@\r\n     _    @\r\n    / \\\\   @\r\n   / _ \\\\  @\r\n  / ___ \\\\ @\r\n /_/   \\\\_\\\\@\r\n          @@\r\n  ____  @\r\n | __ ) @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |____/ @\r\n        @@\r\n   ____ @\r\n  / ___|@\r\n | |    @\r\n | |___ @\r\n  \\\\____|@\r\n        @@\r\n  ____  @\r\n |  _ \\\\ @\r\n | | | |@\r\n | |_| |@\r\n |____/ @\r\n        @@\r\n  _____ @\r\n | ____|@\r\n |  _|  @\r\n | |___ @\r\n |_____|@\r\n        @@\r\n  _____ @\r\n |  ___|@\r\n | |_   @\r\n |  _|  @\r\n |_|    @\r\n        @@\r\n   ____ @\r\n  / ___|@\r\n | |  _ @\r\n | |_| |@\r\n  \\\\____|@\r\n        @@\r\n  _   _ @\r\n | | | |@\r\n | |_| |@\r\n |  _  |@\r\n |_| |_|@\r\n        @@\r\n  ___ @\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n      @@\r\n      _ @\r\n     | |@\r\n  _  | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n  _  __@\r\n | |/ /@\r\n | ' / @\r\n | . \\\\ @\r\n |_|\\\\_\\\\@\r\n       @@\r\n  _     @\r\n | |    @\r\n | |    @\r\n | |___ @\r\n |_____|@\r\n        @@\r\n  __  __ @\r\n |  \\\\/  |@\r\n | |\\\\/| |@\r\n | |  | |@\r\n |_|  |_|@\r\n         @@\r\n  _   _ @\r\n | \\\\ | |@\r\n |  \\\\| |@\r\n | |\\\\  |@\r\n |_| \\\\_|@\r\n        @@\r\n   ___  @\r\n  / _ \\\\ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n  ____  @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |  __/ @\r\n |_|    @\r\n        @@\r\n   ___  @\r\n  / _ \\\\ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__\\\\_\\\\@\r\n        @@\r\n  ____  @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |  _ < @\r\n |_| \\\\_\\\\@\r\n        @@\r\n  ____  @\r\n / ___| @\r\n \\\\___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n  _____ @\r\n |_   _|@\r\n   | |  @\r\n   | |  @\r\n   |_|  @\r\n        @@\r\n  _   _ @\r\n | | | |@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n __     __@\r\n \\\\ \\\\   / /@\r\n  \\\\ \\\\ / / @\r\n   \\\\ V /  @\r\n    \\\\_/   @\r\n          @@\r\n __        __@\r\n \\\\ \\\\      / /@\r\n  \\\\ \\\\ /\\\\ / / @\r\n   \\\\ V  V /  @\r\n    \\\\_/\\\\_/   @\r\n             @@\r\n __  __@\r\n \\\\ \\\\/ /@\r\n  \\\\  / @\r\n  /  \\\\ @\r\n /_/\\\\_\\\\@\r\n       @@\r\n __   __@\r\n \\\\ \\\\ / /@\r\n  \\\\ V / @\r\n   | |  @\r\n   |_|  @\r\n        @@\r\n  _____@\r\n |__  /@\r\n   / / @\r\n  / /_ @\r\n /____|@\r\n       @@\r\n  __ @\r\n | _|@\r\n | | @\r\n | | @\r\n | | @\r\n |__|@@\r\n __    @\r\n \\\\ \\\\   @\r\n  \\\\ \\\\  @\r\n   \\\\ \\\\ @\r\n    \\\\_\\\\@\r\n       @@\r\n  __ @\r\n |_ |@\r\n  | |@\r\n  | |@\r\n  | |@\r\n |__|@@\r\n  /\\\\ @\r\n |/\\\\|@\r\n   $ @\r\n   $ @\r\n   $ @\r\n     @@\r\n        @\r\n        @\r\n        @\r\n        @\r\n  _____ @\r\n |_____|@@\r\n  _ @\r\n ( )@\r\n  \\\\|@\r\n  $ @\r\n  $ @\r\n    @@\r\n        @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n  _     @\r\n | |__  @\r\n | '_ \\\\ @\r\n | |_) |@\r\n |_.__/ @\r\n        @@\r\n       @\r\n   ___ @\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n       @@\r\n      _ @\r\n   __| |@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n       @\r\n   ___ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n   __ @\r\n  / _|@\r\n | |_ @\r\n |  _|@\r\n |_|  @\r\n      @@\r\n        @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n  _     @\r\n | |__  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n  _ @\r\n (_)@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n    _ @\r\n   (_)@\r\n   | |@\r\n   | |@\r\n  _/ |@\r\n |__/ @@\r\n  _    @\r\n | | __@\r\n | |/ /@\r\n |   < @\r\n |_|\\\\_\\\\@\r\n       @@\r\n  _ @\r\n | |@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n            @\r\n  _ __ ___  @\r\n | '_ \\` _ \\\\ @\r\n | | | | | |@\r\n |_| |_| |_|@\r\n            @@\r\n        @\r\n  _ __  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n        @\r\n   ___  @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n        @\r\n  _ __  @\r\n | '_ \\\\ @\r\n | |_) |@\r\n | .__/ @\r\n |_|    @@\r\n        @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n     |_|@@\r\n       @\r\n  _ __ @\r\n | '__|@\r\n | |   @\r\n |_|   @\r\n       @@\r\n      @\r\n  ___ @\r\n / __|@\r\n \\\\__ \\\\@\r\n |___/@\r\n      @@\r\n  _   @\r\n | |_ @\r\n | __|@\r\n | |_ @\r\n  \\\\__|@\r\n      @@\r\n        @\r\n  _   _ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n        @\r\n __   __@\r\n \\\\ \\\\ / /@\r\n  \\\\ V / @\r\n   \\\\_/  @\r\n        @@\r\n           @\r\n __      __@\r\n \\\\ \\\\ /\\\\ / /@\r\n  \\\\ V  V / @\r\n   \\\\_/\\\\_/  @\r\n           @@\r\n       @\r\n __  __@\r\n \\\\ \\\\/ /@\r\n  >  < @\r\n /_/\\\\_\\\\@\r\n       @@\r\n        @\r\n  _   _ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n      @\r\n  ____@\r\n |_  /@\r\n  / / @\r\n /___|@\r\n      @@\r\n    __@\r\n   / /@\r\n  | | @\r\n < <  @\r\n  | | @\r\n   \\\\_\\\\@@\r\n  _ @\r\n | |@\r\n | |@\r\n | |@\r\n | |@\r\n |_|@@\r\n __   @\r\n \\\\ \\\\  @\r\n  | | @\r\n   > >@\r\n  | | @\r\n /_/  @@\r\n  /\\\\/|@\r\n |/\\\\/ @\r\n   $  @\r\n   $  @\r\n   $  @\r\n      @@\r\n  _   _ @\r\n (_)_(_)@\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n  _   _ @\r\n (_)_(_)@\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n  _   _ @\r\n (_)_(_)@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n  _   _ @\r\n (_)_(_)@\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n   ___ @\r\n  / _ \\\\@\r\n | |/ /@\r\n | |\\\\ \\\\@\r\n | ||_/@\r\n |_|   @@\r\n160  NO-BREAK SPACE\r\n $@\r\n $@\r\n $@\r\n $@\r\n $@\r\n $@@\r\n161  INVERTED EXCLAMATION MARK\r\n  _ @\r\n (_)@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n162  CENT SIGN\r\n    _  @\r\n   | | @\r\n  / __)@\r\n | (__ @\r\n  \\\\   )@\r\n   |_| @@\r\n163  POUND SIGN\r\n    ___  @\r\n   / ,_\\\\ @\r\n _| |_   @\r\n  | |___ @\r\n (_,____|@\r\n         @@\r\n164  CURRENCY SIGN\r\n /\\\\___/\\\\@\r\n \\\\  _  /@\r\n | (_) |@\r\n / ___ \\\\@\r\n \\\\/   \\\\/@\r\n        @@\r\n165  YEN SIGN\r\n  __ __ @\r\n  \\\\ V / @\r\n |__ __|@\r\n |__ __|@\r\n   |_|  @\r\n        @@\r\n166  BROKEN BAR\r\n  _ @\r\n | |@\r\n |_|@\r\n  _ @\r\n | |@\r\n |_|@@\r\n167  SECTION SIGN\r\n    __ @\r\n  _/ _)@\r\n / \\\\ \\\\ @\r\n \\\\ \\\\\\\\ \\\\@\r\n  \\\\ \\\\_/@\r\n (__/  @@\r\n168  DIAERESIS\r\n  _   _ @\r\n (_) (_)@\r\n  $   $ @\r\n  $   $ @\r\n  $   $ @\r\n        @@\r\n169  COPYRIGHT SIGN\r\n    _____   @\r\n   / ___ \\\\  @\r\n  / / __| \\\\ @\r\n | | (__   |@\r\n  \\\\ \\\\___| / @\r\n   \\\\_____/  @@\r\n170  FEMININE ORDINAL INDICATOR\r\n  __ _ @\r\n / _\\` |@\r\n \\\\__,_|@\r\n |____|@\r\n    $  @\r\n       @@\r\n171  LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\r\n   ____@\r\n  / / /@\r\n / / / @\r\n \\\\ \\\\ \\\\ @\r\n  \\\\_\\\\_\\\\@\r\n       @@\r\n172  NOT SIGN\r\n        @\r\n  _____ @\r\n |___  |@\r\n     |_|@\r\n    $   @\r\n        @@\r\n173  SOFT HYPHEN\r\n       @\r\n       @\r\n  ____ @\r\n |____|@\r\n    $  @\r\n       @@\r\n174  REGISTERED SIGN\r\n    _____   @\r\n   / ___ \\\\  @\r\n  / | _ \\\\ \\\\ @\r\n |  |   /  |@\r\n  \\\\ |_|_\\\\ / @\r\n   \\\\_____/  @@\r\n175  MACRON\r\n  _____ @\r\n |_____|@\r\n    $   @\r\n    $   @\r\n    $   @\r\n        @@\r\n176  DEGREE SIGN\r\n   __  @\r\n  /  \\\\ @\r\n | () |@\r\n  \\\\__/ @\r\n    $  @\r\n       @@\r\n177  PLUS-MINUS SIGN\r\n    _   @\r\n  _| |_ @\r\n |_   _|@\r\n  _|_|_ @\r\n |_____|@\r\n        @@\r\n178  SUPERSCRIPT TWO\r\n  ___ @\r\n |_  )@\r\n  / / @\r\n /___|@\r\n   $  @\r\n      @@\r\n179  SUPERSCRIPT THREE\r\n  ____@\r\n |__ /@\r\n  |_ \\\\@\r\n |___/@\r\n   $  @\r\n      @@\r\n180  ACUTE ACCENT\r\n  __@\r\n /_/@\r\n  $ @\r\n  $ @\r\n  $ @\r\n    @@\r\n181  MICRO SIGN\r\n        @\r\n  _   _ @\r\n | | | |@\r\n | |_| |@\r\n | ._,_|@\r\n |_|    @@\r\n182  PILCROW SIGN\r\n   _____ @\r\n  /     |@\r\n | (| | |@\r\n  \\\\__ | |@\r\n    |_|_|@\r\n         @@\r\n183  MIDDLE DOT\r\n    @\r\n  _ @\r\n (_)@\r\n  $ @\r\n  $ @\r\n    @@\r\n184  CEDILLA\r\n    @\r\n    @\r\n    @\r\n    @\r\n  _ @\r\n )_)@@\r\n185  SUPERSCRIPT ONE\r\n  _ @\r\n / |@\r\n | |@\r\n |_|@\r\n  $ @\r\n    @@\r\n186  MASCULINE ORDINAL INDICATOR\r\n  ___ @\r\n / _ \\\\@\r\n \\\\___/@\r\n |___|@\r\n   $  @\r\n      @@\r\n187  RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\r\n ____  @\r\n \\\\ \\\\ \\\\ @\r\n  \\\\ \\\\ \\\\@\r\n  / / /@\r\n /_/_/ @\r\n       @@\r\n188  VULGAR FRACTION ONE QUARTER\r\n  _   __    @\r\n / | / / _  @\r\n | |/ / | | @\r\n |_/ /|_  _|@\r\n  /_/   |_| @\r\n            @@\r\n189  VULGAR FRACTION ONE HALF\r\n  _   __   @\r\n / | / /__ @\r\n | |/ /_  )@\r\n |_/ / / / @\r\n  /_/ /___|@\r\n           @@\r\n190  VULGAR FRACTION THREE QUARTERS\r\n  ____  __    @\r\n |__ / / / _  @\r\n  |_ \\\\/ / | | @\r\n |___/ /|_  _|@\r\n    /_/   |_| @\r\n              @@\r\n191  INVERTED QUESTION MARK\r\n   _  @\r\n  (_) @\r\n  | | @\r\n / /_ @\r\n \\\\___|@\r\n      @@\r\n192  LATIN CAPITAL LETTER A WITH GRAVE\r\n   __   @\r\n   \\\\_\\\\  @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n193  LATIN CAPITAL LETTER A WITH ACUTE\r\n    __  @\r\n   /_/  @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n194  LATIN CAPITAL LETTER A WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/_\\\\| @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n195  LATIN CAPITAL LETTER A WITH TILDE\r\n   /\\\\/| @\r\n  |/\\\\/  @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n196  LATIN CAPITAL LETTER A WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n197  LATIN CAPITAL LETTER A WITH RING ABOVE\r\n    _   @\r\n   (o)  @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n198  LATIN CAPITAL LETTER AE\r\n     ______ @\r\n    /  ____|@\r\n   / _  _|  @\r\n  / __ |___ @\r\n /_/ |_____|@\r\n            @@\r\n199  LATIN CAPITAL LETTER C WITH CEDILLA\r\n   ____ @\r\n  / ___|@\r\n | |    @\r\n | |___ @\r\n  \\\\____|@\r\n    )_) @@\r\n200  LATIN CAPITAL LETTER E WITH GRAVE\r\n   __   @\r\n  _\\\\_\\\\_ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n201  LATIN CAPITAL LETTER E WITH ACUTE\r\n    __  @\r\n  _/_/_ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n202  LATIN CAPITAL LETTER E WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/_\\\\| @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n203  LATIN CAPITAL LETTER E WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n204  LATIN CAPITAL LETTER I WITH GRAVE\r\n  __  @\r\n  \\\\_\\\\ @\r\n |_ _|@\r\n  | | @\r\n |___|@\r\n      @@\r\n205  LATIN CAPITAL LETTER I WITH ACUTE\r\n   __ @\r\n  /_/ @\r\n |_ _|@\r\n  | | @\r\n |___|@\r\n      @@\r\n206  LATIN CAPITAL LETTER I WITH CIRCUMFLEX\r\n  //\\\\ @\r\n |/_\\\\|@\r\n |_ _|@\r\n  | | @\r\n |___|@\r\n      @@\r\n207  LATIN CAPITAL LETTER I WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n  |_ _| @\r\n   | |  @\r\n  |___| @\r\n        @@\r\n208  LATIN CAPITAL LETTER ETH\r\n    ____  @\r\n   |  _ \\\\ @\r\n  _| |_| |@\r\n |__ __| |@\r\n   |____/ @\r\n          @@\r\n209  LATIN CAPITAL LETTER N WITH TILDE\r\n   /\\\\/|@\r\n  |/\\\\/ @\r\n | \\\\| |@\r\n | .\\` |@\r\n |_|\\\\_|@\r\n       @@\r\n210  LATIN CAPITAL LETTER O WITH GRAVE\r\n   __   @\r\n   \\\\_\\\\  @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n211  LATIN CAPITAL LETTER O WITH ACUTE\r\n    __  @\r\n   /_/  @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n212  LATIN CAPITAL LETTER O WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/_\\\\| @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n213  LATIN CAPITAL LETTER O WITH TILDE\r\n   /\\\\/| @\r\n  |/\\\\/  @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n214  LATIN CAPITAL LETTER O WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n215  MULTIPLICATION SIGN\r\n     @\r\n     @\r\n /\\\\/\\\\@\r\n >  <@\r\n \\\\/\\\\/@\r\n     @@\r\n216  LATIN CAPITAL LETTER O WITH STROKE\r\n   ____ @\r\n  / _// @\r\n | |// |@\r\n | //| |@\r\n  //__/ @\r\n        @@\r\n217  LATIN CAPITAL LETTER U WITH GRAVE\r\n   __   @\r\n  _\\\\_\\\\_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n218  LATIN CAPITAL LETTER U WITH ACUTE\r\n    __  @\r\n  _/_/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n219  LATIN CAPITAL LETTER U WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/ \\\\| @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n220  LATIN CAPITAL LETTER U WITH DIAERESIS\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n221  LATIN CAPITAL LETTER Y WITH ACUTE\r\n    __  @\r\n __/_/__@\r\n \\\\ \\\\ / /@\r\n  \\\\ V / @\r\n   |_|  @\r\n        @@\r\n222  LATIN CAPITAL LETTER THORN\r\n  _     @\r\n | |___ @\r\n |  __ \\\\@\r\n |  ___/@\r\n |_|    @\r\n        @@\r\n223  LATIN SMALL LETTER SHARP S\r\n   ___ @\r\n  / _ \\\\@\r\n | |/ /@\r\n | |\\\\ \\\\@\r\n | ||_/@\r\n |_|   @@\r\n224  LATIN SMALL LETTER A WITH GRAVE\r\n   __   @\r\n   \\\\_\\\\_ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n225  LATIN SMALL LETTER A WITH ACUTE\r\n    __  @\r\n   /_/_ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n226  LATIN SMALL LETTER A WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/_\\\\| @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n227  LATIN SMALL LETTER A WITH TILDE\r\n   /\\\\/| @\r\n  |/\\\\/_ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n228  LATIN SMALL LETTER A WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n229  LATIN SMALL LETTER A WITH RING ABOVE\r\n    __  @\r\n   (()) @\r\n  / _ '|@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n230  LATIN SMALL LETTER AE\r\n           @\r\n   __ ____ @\r\n  / _\\`  _ \\\\@\r\n | (_|  __/@\r\n  \\\\__,____|@\r\n           @@\r\n231  LATIN SMALL LETTER C WITH CEDILLA\r\n       @\r\n   ___ @\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n   )_) @@\r\n232  LATIN SMALL LETTER E WITH GRAVE\r\n   __  @\r\n   \\\\_\\\\ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n233  LATIN SMALL LETTER E WITH ACUTE\r\n    __ @\r\n   /_/ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n234  LATIN SMALL LETTER E WITH CIRCUMFLEX\r\n   //\\\\ @\r\n  |/_\\\\|@\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n235  LATIN SMALL LETTER E WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n  / _ \\\\ @\r\n |  __/ @\r\n  \\\\___| @\r\n        @@\r\n236  LATIN SMALL LETTER I WITH GRAVE\r\n __ @\r\n \\\\_\\\\@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n237  LATIN SMALL LETTER I WITH ACUTE\r\n  __@\r\n /_/@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n238  LATIN SMALL LETTER I WITH CIRCUMFLEX\r\n  //\\\\ @\r\n |/_\\\\|@\r\n  | | @\r\n  | | @\r\n  |_| @\r\n      @@\r\n239  LATIN SMALL LETTER I WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n   | |  @\r\n   | |  @\r\n   |_|  @\r\n        @@\r\n240  LATIN SMALL LETTER ETH\r\n   /\\\\/\\\\ @\r\n   >  < @\r\n  _\\\\/\\\\ |@\r\n / __\\` |@\r\n \\\\____/ @\r\n        @@\r\n241  LATIN SMALL LETTER N WITH TILDE\r\n   /\\\\/| @\r\n  |/\\\\/  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n242  LATIN SMALL LETTER O WITH GRAVE\r\n   __   @\r\n   \\\\_\\\\  @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n243  LATIN SMALL LETTER O WITH ACUTE\r\n    __  @\r\n   /_/  @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n244  LATIN SMALL LETTER O WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/_\\\\| @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n245  LATIN SMALL LETTER O WITH TILDE\r\n   /\\\\/| @\r\n  |/\\\\/  @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n246  LATIN SMALL LETTER O WITH DIAERESIS\r\n  _   _ @\r\n (_)_(_)@\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n247  DIVISION SIGN\r\n        @\r\n    _   @\r\n  _(_)_ @\r\n |_____|@\r\n   (_)  @\r\n        @@\r\n248  LATIN SMALL LETTER O WITH STROKE\r\n         @\r\n   ____  @\r\n  / _//\\\\ @\r\n | (//) |@\r\n  \\\\//__/ @\r\n         @@\r\n249  LATIN SMALL LETTER U WITH GRAVE\r\n   __   @\r\n  _\\\\_\\\\_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n250  LATIN SMALL LETTER U WITH ACUTE\r\n    __  @\r\n  _/_/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n251  LATIN SMALL LETTER U WITH CIRCUMFLEX\r\n   //\\\\  @\r\n  |/ \\\\| @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n252  LATIN SMALL LETTER U WITH DIAERESIS\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n253  LATIN SMALL LETTER Y WITH ACUTE\r\n    __  @\r\n  _/_/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n254  LATIN SMALL LETTER THORN\r\n  _     @\r\n | |__  @\r\n | '_ \\\\ @\r\n | |_) |@\r\n | .__/ @\r\n |_|    @@\r\n255  LATIN SMALL LETTER Y WITH DIAERESIS\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | |_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n0x0100  LATIN CAPITAL LETTER A WITH MACRON\r\n   ____ @\r\n  /___/ @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n0x0101  LATIN SMALL LETTER A WITH MACRON\r\n    ___ @\r\n   /_ _/@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0102  LATIN CAPITAL LETTER A WITH BREVE\r\n  _   _ @\r\n  \\\\\\\\_// @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n        @@\r\n0x0103  LATIN SMALL LETTER A WITH BREVE\r\n   \\\\_/  @\r\n   ___  @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0104  LATIN CAPITAL LETTER A WITH OGONEK\r\n        @\r\n    _   @\r\n   /_\\\\  @\r\n  / _ \\\\ @\r\n /_/ \\\\_\\\\@\r\n     (_(@@\r\n0x0105  LATIN SMALL LETTER A WITH OGONEK\r\n        @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n     (_(@@\r\n0x0106  LATIN CAPITAL LETTER C WITH ACUTE\r\n     __ @\r\n   _/_/ @\r\n  / ___|@\r\n | |___ @\r\n  \\\\____|@\r\n        @@\r\n0x0107  LATIN SMALL LETTER C WITH ACUTE\r\n    __ @\r\n   /__/@\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n       @@\r\n0x0108  LATIN CAPITAL LETTER C WITH CIRCUMFLEX\r\n     /\\\\ @\r\n   _//\\\\\\\\@\r\n  / ___|@\r\n | |___ @\r\n  \\\\____|@\r\n        @@\r\n0x0109  LATIN SMALL LETTER C WITH CIRCUMFLEX\r\n    /\\\\ @\r\n   /_\\\\ @\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n       @@\r\n0x010A  LATIN CAPITAL LETTER C WITH DOT ABOVE\r\n    []  @\r\n   ____ @\r\n  / ___|@\r\n | |___ @\r\n  \\\\____|@\r\n        @@\r\n0x010B  LATIN SMALL LETTER C WITH DOT ABOVE\r\n   []  @\r\n   ___ @\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n       @@\r\n0x010C  LATIN CAPITAL LETTER C WITH CARON\r\n   \\\\\\\\// @\r\n   _\\\\/_ @\r\n  / ___|@\r\n | |___ @\r\n  \\\\____|@\r\n        @@\r\n0x010D  LATIN SMALL LETTER C WITH CARON\r\n   \\\\\\\\//@\r\n   _\\\\/ @\r\n  / __|@\r\n | (__ @\r\n  \\\\___|@\r\n       @@\r\n0x010E  LATIN CAPITAL LETTER D WITH CARON\r\n   \\\\\\\\// @\r\n  __\\\\/  @\r\n |  _ \\\\ @\r\n | |_| |@\r\n |____/ @\r\n        @@\r\n0x010F  LATIN SMALL LETTER D WITH CARON\r\n  \\\\/  _ @\r\n   __| |@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0110  LATIN CAPITAL LETTER D WITH STROKE\r\n   ____   @\r\n  |_ __ \\\\ @\r\n /| |/ | |@\r\n /|_|/_| |@\r\n  |_____/ @\r\n          @@\r\n0x0111  LATIN SMALL LETTER D WITH STROKE\r\n    ---|@\r\n   __| |@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0112  LATIN CAPITAL LETTER E WITH MACRON\r\n   ____ @\r\n  /___/ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n0x0113  LATIN SMALL LETTER E WITH MACRON\r\n    ____@\r\n   /_ _/@\r\n  / _ \\\\ @\r\n |  __/ @\r\n  \\\\___| @\r\n        @@\r\n0x0114  LATIN CAPITAL LETTER E WITH BREVE\r\n  _   _ @\r\n  \\\\\\\\_// @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n0x0115  LATIN SMALL LETTER E WITH BREVE\r\n  \\\\\\\\  //@\r\n    --  @\r\n  / _ \\\\ @\r\n |  __/ @\r\n  \\\\___| @\r\n        @@\r\n0x0116  LATIN CAPITAL LETTER E WITH DOT ABOVE\r\n    []  @\r\n  _____ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n0x0117  LATIN SMALL LETTER E WITH DOT ABOVE\r\n    [] @\r\n    __ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n0x0118  LATIN CAPITAL LETTER E WITH OGONEK\r\n        @\r\n  _____ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n    (__(@@\r\n0x0119  LATIN SMALL LETTER E WITH OGONEK\r\n       @\r\n   ___ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n    (_(@@\r\n0x011A  LATIN CAPITAL LETTER E WITH CARON\r\n   \\\\\\\\// @\r\n  __\\\\/_ @\r\n | ____|@\r\n |  _|_ @\r\n |_____|@\r\n        @@\r\n0x011B  LATIN SMALL LETTER E WITH CARON\r\n   \\\\\\\\//@\r\n    \\\\/ @\r\n  / _ \\\\@\r\n |  __/@\r\n  \\\\___|@\r\n       @@\r\n0x011C  LATIN CAPITAL LETTER G WITH CIRCUMFLEX\r\n   _/\\\\_ @\r\n  / ___|@\r\n | |  _ @\r\n | |_| |@\r\n  \\\\____|@\r\n        @@\r\n0x011D  LATIN SMALL LETTER G WITH CIRCUMFLEX\r\n     /\\\\ @\r\n   _/_ \\\\@\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n0x011E  LATIN CAPITAL LETTER G WITH BREVE\r\n   _\\\\/_ @\r\n  / ___|@\r\n | |  _ @\r\n | |_| |@\r\n  \\\\____|@\r\n        @@\r\n0x011F  LATIN SMALL LETTER G WITH BREVE\r\n  \\\\___/ @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n0x0120  LATIN CAPITAL LETTER G WITH DOT ABOVE\r\n   _[]_ @\r\n  / ___|@\r\n | |  _ @\r\n | |_| |@\r\n  \\\\____|@\r\n        @@\r\n0x0121  LATIN SMALL LETTER G WITH DOT ABOVE\r\n   []   @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n0x0122  LATIN CAPITAL LETTER G WITH CEDILLA\r\n   ____ @\r\n  / ___|@\r\n | |  _ @\r\n | |_| |@\r\n  \\\\____|@\r\n   )__) @@\r\n0x0123  LATIN SMALL LETTER G WITH CEDILLA\r\n        @\r\n   __ _ @\r\n  / _\\` |@\r\n | (_| |@\r\n  \\\\__, |@\r\n  |_))))@@\r\n0x0124  LATIN CAPITAL LETTER H WITH CIRCUMFLEX\r\n  _/ \\\\_ @\r\n | / \\\\ |@\r\n | |_| |@\r\n |  _  |@\r\n |_| |_|@\r\n        @@\r\n0x0125  LATIN SMALL LETTER H WITH CIRCUMFLEX\r\n  _  /\\\\ @\r\n | |//\\\\ @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n0x0126  LATIN CAPITAL LETTER H WITH STROKE\r\n  _   _ @\r\n | |=| |@\r\n | |_| |@\r\n |  _  |@\r\n |_| |_|@\r\n        @@\r\n0x0127  LATIN SMALL LETTER H WITH STROKE\r\n  _     @\r\n |=|__  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n0x0128  LATIN CAPITAL LETTER I WITH TILDE\r\n  /\\\\//@\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n      @@\r\n0x0129  LATIN SMALL LETTER I WITH TILDE\r\n    @\r\n /\\\\/@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n0x012A  LATIN CAPITAL LETTER I WITH MACRON\r\n /___/@\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n      @@\r\n0x012B  LATIN SMALL LETTER I WITH MACRON\r\n  ____@\r\n /___/@\r\n  | | @\r\n  | | @\r\n  |_| @\r\n      @@\r\n0x012C  LATIN CAPITAL LETTER I WITH BREVE\r\n  \\\\__/@\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n      @@\r\n0x012D  LATIN SMALL LETTER I WITH BREVE\r\n    @\r\n \\\\_/@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n0x012E  LATIN CAPITAL LETTER I WITH OGONEK\r\n  ___ @\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n  (__(@@\r\n0x012F  LATIN SMALL LETTER I WITH OGONEK\r\n  _  @\r\n (_) @\r\n | | @\r\n | | @\r\n |_|_@\r\n  (_(@@\r\n0x0130  LATIN CAPITAL LETTER I WITH DOT ABOVE\r\n  _[] @\r\n |_ _|@\r\n  | | @\r\n  | | @\r\n |___|@\r\n      @@\r\n0x0131  LATIN SMALL LETTER DOTLESS I\r\n    @\r\n  _ @\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n0x0132  LATIN CAPITAL LIGATURE IJ\r\n  ___  _ @\r\n |_ _|| |@\r\n  | | | |@\r\n  | |_| |@\r\n |__|__/ @\r\n         @@\r\n0x0133  LATIN SMALL LIGATURE IJ\r\n  _   _ @\r\n (_) (_)@\r\n | | | |@\r\n | | | |@\r\n |_|_/ |@\r\n   |__/ @@\r\n0x0134  LATIN CAPITAL LETTER J WITH CIRCUMFLEX\r\n      /\\\\ @\r\n     /_\\\\|@\r\n  _  | | @\r\n | |_| | @\r\n  \\\\___/  @\r\n         @@\r\n0x0135  LATIN SMALL LETTER J WITH CIRCUMFLEX\r\n    /\\\\@\r\n   /_\\\\@\r\n   | |@\r\n   | |@\r\n  _/ |@\r\n |__/ @@\r\n0x0136  LATIN CAPITAL LETTER K WITH CEDILLA\r\n  _  _  @\r\n | |/ / @\r\n | ' /  @\r\n | . \\\\  @\r\n |_|\\\\_\\\\ @\r\n    )__)@@\r\n0x0137  LATIN SMALL LETTER K WITH CEDILLA\r\n  _    @\r\n | | __@\r\n | |/ /@\r\n |   < @\r\n |_|\\\\_\\\\@\r\n    )_)@@\r\n0x0138  LATIN SMALL LETTER KRA\r\n       @\r\n  _ __ @\r\n | |/ \\\\@\r\n |   < @\r\n |_|\\\\_\\\\@\r\n       @@\r\n0x0139  LATIN CAPITAL LETTER L WITH ACUTE\r\n  _   //@\r\n | | // @\r\n | |    @\r\n | |___ @\r\n |_____|@\r\n        @@\r\n0x013A  LATIN SMALL LETTER L WITH ACUTE\r\n  //@\r\n | |@\r\n | |@\r\n | |@\r\n |_|@\r\n    @@\r\n0x013B  LATIN CAPITAL LETTER L WITH CEDILLA\r\n  _     @\r\n | |    @\r\n | |    @\r\n | |___ @\r\n |_____|@\r\n    )__)@@\r\n0x013C  LATIN SMALL LETTER L WITH CEDILLA\r\n  _   @\r\n | |  @\r\n | |  @\r\n | |  @\r\n |_|  @\r\n   )_)@@\r\n0x013D  LATIN CAPITAL LETTER L WITH CARON\r\n  _ \\\\\\\\//@\r\n | | \\\\/ @\r\n | |    @\r\n | |___ @\r\n |_____|@\r\n        @@\r\n0x013E  LATIN SMALL LETTER L WITH CARON\r\n  _ \\\\\\\\//@\r\n | | \\\\/ @\r\n | |    @\r\n | |    @\r\n |_|    @\r\n        @@\r\n0x013F  LATIN CAPITAL LETTER L WITH MIDDLE DOT\r\n  _     @\r\n | |    @\r\n | | [] @\r\n | |___ @\r\n |_____|@\r\n        @@\r\n0x0140  LATIN SMALL LETTER L WITH MIDDLE DOT\r\n  _    @\r\n | |   @\r\n | | []@\r\n | |   @\r\n |_|   @\r\n       @@\r\n0x0141  LATIN CAPITAL LETTER L WITH STROKE\r\n  __    @\r\n | //   @\r\n |//|   @\r\n // |__ @\r\n |_____|@\r\n        @@\r\n0x0142  LATIN SMALL LETTER L WITH STROKE\r\n  _ @\r\n | |@\r\n |//@\r\n //|@\r\n |_|@\r\n    @@\r\n0x0143  LATIN CAPITAL LETTER N WITH ACUTE\r\n  _/ /_ @\r\n | \\\\ | |@\r\n |  \\\\| |@\r\n | |\\\\  |@\r\n |_| \\\\_|@\r\n        @@\r\n0x0144  LATIN SMALL LETTER N WITH ACUTE\r\n     _  @\r\n  _ /_/ @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n0x0145  LATIN CAPITAL LETTER N WITH CEDILLA\r\n  _   _ @\r\n | \\\\ | |@\r\n |  \\\\| |@\r\n | |\\\\  |@\r\n |_| \\\\_|@\r\n )_)    @@\r\n0x0146  LATIN SMALL LETTER N WITH CEDILLA\r\n        @\r\n  _ __  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n )_)    @@\r\n0x0147  LATIN CAPITAL LETTER N WITH CARON\r\n  _\\\\/ _ @\r\n | \\\\ | |@\r\n |  \\\\| |@\r\n | |\\\\  |@\r\n |_| \\\\_|@\r\n        @@\r\n0x0148  LATIN SMALL LETTER N WITH CARON\r\n  \\\\\\\\//  @\r\n  _\\\\/_  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| |_|@\r\n        @@\r\n0x0149  LATIN SMALL LETTER N PRECEDED BY APOSTROPHE\r\n          @\r\n  _  __   @\r\n ( )| '_\\\\ @\r\n |/| | | |@\r\n   |_| |_|@\r\n          @@\r\n0x014A  LATIN CAPITAL LETTER ENG\r\n  _   _ @\r\n | \\\\ | |@\r\n |  \\\\| |@\r\n | |\\\\  |@\r\n |_| \\\\ |@\r\n     )_)@@\r\n0x014B  LATIN SMALL LETTER ENG\r\n  _ __  @\r\n | '_ \\\\ @\r\n | | | |@\r\n |_| | |@\r\n     | |@\r\n    |__ @@\r\n0x014C  LATIN CAPITAL LETTER O WITH MACRON\r\n   ____ @\r\n  /_ _/ @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n0x014D  LATIN SMALL LETTER O WITH MACRON\r\n   ____ @\r\n  /_ _/ @\r\n  / _ \\\\ @\r\n | (_) |@\r\n  \\\\___/ @\r\n        @@\r\n0x014E  LATIN CAPITAL LETTER O WITH BREVE\r\n  \\\\   / @\r\n   _-_  @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x014F  LATIN SMALL LETTER O WITH BREVE\r\n  \\\\   / @\r\n   _-_  @\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x0150  LATIN CAPITAL LETTER O WITH DOUBLE ACUTE\r\n    ___ @\r\n   /_/_/@\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x0151  LATIN SMALL LETTER O WITH DOUBLE ACUTE\r\n    ___ @\r\n   /_/_/@\r\n  / _ \\\\ @\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x0152  LATIN CAPITAL LIGATURE OE\r\n   ___  ___ @\r\n  / _ \\\\| __|@\r\n | | | |  | @\r\n | |_| | |__@\r\n  \\\\___/|____@\r\n            @@\r\n0x0153  LATIN SMALL LIGATURE OE\r\n             @\r\n   ___   ___ @\r\n  / _ \\\\ / _ \\\\@\r\n | (_) |  __/@\r\n  \\\\___/ \\\\___|@\r\n             @@\r\n0x0154  LATIN CAPITAL LETTER R WITH ACUTE\r\n  _/_/  @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |  _ < @\r\n |_| \\\\_\\\\@\r\n        @@\r\n0x0155  LATIN SMALL LETTER R WITH ACUTE\r\n     __@\r\n  _ /_/@\r\n | '__|@\r\n | |   @\r\n |_|   @\r\n       @@\r\n0x0156  LATIN CAPITAL LETTER R WITH CEDILLA\r\n  ____  @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |  _ < @\r\n |_| \\\\_\\\\@\r\n )_)    @@\r\n0x0157  LATIN SMALL LETTER R WITH CEDILLA\r\n       @\r\n  _ __ @\r\n | '__|@\r\n | |   @\r\n |_|   @\r\n   )_) @@\r\n0x0158  LATIN CAPITAL LETTER R WITH CARON\r\n  _\\\\_/  @\r\n |  _ \\\\ @\r\n | |_) |@\r\n |  _ < @\r\n |_| \\\\_\\\\@\r\n        @@\r\n0x0159  LATIN SMALL LETTER R WITH CARON\r\n  \\\\\\\\// @\r\n  _\\\\/_ @\r\n | '__|@\r\n | |   @\r\n |_|   @\r\n       @@\r\n0x015A  LATIN CAPITAL LETTER S WITH ACUTE\r\n  _/_/  @\r\n / ___| @\r\n \\\\___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n0x015B  LATIN SMALL LETTER S WITH ACUTE\r\n    __@\r\n  _/_/@\r\n / __|@\r\n \\\\__ \\\\@\r\n |___/@\r\n      @@\r\n0x015C  LATIN CAPITAL LETTER S WITH CIRCUMFLEX\r\n  _/\\\\_  @\r\n / ___| @\r\n \\\\___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n0x015D  LATIN SMALL LETTER S WITH CIRCUMFLEX\r\n      @\r\n  /_\\\\_@\r\n / __|@\r\n \\\\__ \\\\@\r\n |___/@\r\n      @@\r\n0x015E  LATIN CAPITAL LETTER S WITH CEDILLA\r\n  ____  @\r\n / ___| @\r\n \\\\___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n    )__)@@\r\n0x015F  LATIN SMALL LETTER S WITH CEDILLA\r\n      @\r\n  ___ @\r\n / __|@\r\n \\\\__ \\\\@\r\n |___/@\r\n   )_)@@\r\n0x0160  LATIN CAPITAL LETTER S WITH CARON\r\n  _\\\\_/  @\r\n / ___| @\r\n \\\\___ \\\\ @\r\n  ___) |@\r\n |____/ @\r\n        @@\r\n0x0161  LATIN SMALL LETTER S WITH CARON\r\n  \\\\\\\\//@\r\n  _\\\\/ @\r\n / __|@\r\n \\\\__ \\\\@\r\n |___/@\r\n      @@\r\n0x0162  LATIN CAPITAL LETTER T WITH CEDILLA\r\n  _____ @\r\n |_   _|@\r\n   | |  @\r\n   | |  @\r\n   |_|  @\r\n    )__)@@\r\n0x0163  LATIN SMALL LETTER T WITH CEDILLA\r\n  _   @\r\n | |_ @\r\n | __|@\r\n | |_ @\r\n  \\\\__|@\r\n   )_)@@\r\n0x0164  LATIN CAPITAL LETTER T WITH CARON\r\n  _____ @\r\n |_   _|@\r\n   | |  @\r\n   | |  @\r\n   |_|  @\r\n        @@\r\n0x0165  LATIN SMALL LETTER T WITH CARON\r\n  \\\\/  @\r\n | |_ @\r\n | __|@\r\n | |_ @\r\n  \\\\__|@\r\n      @@\r\n0x0166  LATIN CAPITAL LETTER T WITH STROKE\r\n  _____ @\r\n |_   _|@\r\n   | |  @\r\n  -|-|- @\r\n   |_|  @\r\n        @@\r\n0x0167  LATIN SMALL LETTER T WITH STROKE\r\n  _   @\r\n | |_ @\r\n | __|@\r\n |-|_ @\r\n  \\\\__|@\r\n      @@\r\n0x0168  LATIN CAPITAL LETTER U WITH TILDE\r\n        @\r\n  _/\\\\/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x0169  LATIN SMALL LETTER U WITH TILDE\r\n        @\r\n  _/\\\\/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x016A  LATIN CAPITAL LETTER U WITH MACRON\r\n   ____ @\r\n  /__ _/@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x016B  LATIN SMALL LETTER U WITH MACRON\r\n   ____ @\r\n  / _  /@\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x016C  LATIN CAPITAL LETTER U WITH BREVE\r\n        @\r\n   \\\\_/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\____|@\r\n        @@\r\n0x016D  LATIN SMALL LETTER U WITH BREVE\r\n        @\r\n   \\\\_/_ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x016E  LATIN CAPITAL LETTER U WITH RING ABOVE\r\n    O   @\r\n  __  _ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x016F  LATIN SMALL LETTER U WITH RING ABOVE\r\n    O   @\r\n  __ __ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0170  LATIN CAPITAL LETTER U WITH DOUBLE ACUTE\r\n   -- --@\r\n  /_//_/@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n        @@\r\n0x0171  LATIN SMALL LETTER U WITH DOUBLE ACUTE\r\n    ____@\r\n  _/_/_/@\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n        @@\r\n0x0172  LATIN CAPITAL LETTER U WITH OGONEK\r\n  _   _ @\r\n | | | |@\r\n | | | |@\r\n | |_| |@\r\n  \\\\___/ @\r\n    (__(@@\r\n0x0173  LATIN SMALL LETTER U WITH OGONEK\r\n        @\r\n  _   _ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__,_|@\r\n     (_(@@\r\n0x0174  LATIN CAPITAL LETTER W WITH CIRCUMFLEX\r\n __    /\\\\  __@\r\n \\\\ \\\\  //\\\\\\\\/ /@\r\n  \\\\ \\\\ /\\\\ / / @\r\n   \\\\ V  V /  @\r\n    \\\\_/\\\\_/   @\r\n             @@\r\n0x0175  LATIN SMALL LETTER W WITH CIRCUMFLEX\r\n      /\\\\   @\r\n __  //\\\\\\\\__@\r\n \\\\ \\\\ /\\\\ / /@\r\n  \\\\ V  V / @\r\n   \\\\_/\\\\_/  @\r\n           @@\r\n0x0176  LATIN CAPITAL LETTER Y WITH CIRCUMFLEX\r\n    /\\\\  @\r\n __//\\\\\\\\ @\r\n \\\\ \\\\ / /@\r\n  \\\\ V / @\r\n   |_|  @\r\n        @@\r\n0x0177  LATIN SMALL LETTER Y WITH CIRCUMFLEX\r\n    /\\\\  @\r\n   //\\\\\\\\ @\r\n | | | |@\r\n | |_| |@\r\n  \\\\__, |@\r\n  |___/ @@\r\n0x0178  LATIN CAPITAL LETTER Y WITH DIAERESIS\r\n  []  []@\r\n __    _@\r\n \\\\ \\\\ / /@\r\n  \\\\ V / @\r\n   |_|  @\r\n        @@\r\n0x0179  LATIN CAPITAL LETTER Z WITH ACUTE\r\n  __/_/@\r\n |__  /@\r\n   / / @\r\n  / /_ @\r\n /____|@\r\n       @@\r\n0x017A  LATIN SMALL LETTER Z WITH ACUTE\r\n    _ @\r\n  _/_/@\r\n |_  /@\r\n  / / @\r\n /___|@\r\n      @@\r\n0x017B  LATIN CAPITAL LETTER Z WITH DOT ABOVE\r\n  __[]_@\r\n |__  /@\r\n   / / @\r\n  / /_ @\r\n /____|@\r\n       @@\r\n0x017C  LATIN SMALL LETTER Z WITH DOT ABOVE\r\n   [] @\r\n  ____@\r\n |_  /@\r\n  / / @\r\n /___|@\r\n      @@\r\n0x017D  LATIN CAPITAL LETTER Z WITH CARON\r\n  _\\\\_/_@\r\n |__  /@\r\n   / / @\r\n  / /_ @\r\n /____|@\r\n       @@\r\n0x017E  LATIN SMALL LETTER Z WITH CARON\r\n  \\\\\\\\//@\r\n  _\\\\/_@\r\n |_  /@\r\n  / / @\r\n /___|@\r\n      @@\r\n0x017F  LATIN SMALL LETTER LONG S\r\n     __ @\r\n    / _|@\r\n |-| |  @\r\n |-| |  @\r\n   |_|  @\r\n        @@\r\n0x02C7  CARON\r\n \\\\\\\\//@\r\n  \\\\/ @\r\n    $@\r\n    $@\r\n    $@\r\n    $@@\r\n0x02D8  BREVE\r\n \\\\\\\\_//@\r\n  \\\\_/ @\r\n     $@\r\n     $@\r\n     $@\r\n     $@@\r\n0x02D9  DOT ABOVE\r\n []@\r\n  $@\r\n  $@\r\n  $@\r\n  $@\r\n  $@@\r\n0x02DB  OGONEK\r\n    $@\r\n    $@\r\n    $@\r\n    $@\r\n    $@\r\n )_) @@\r\n0x02DD  DOUBLE ACUTE ACCENT\r\n  _ _ @\r\n /_/_/@\r\n     $@\r\n     $@\r\n     $@\r\n     $@@\r\n0xCA0  KANNADA LETTER TTHA\r\n   _____)@\r\n  /_ ___/@\r\n  / _ \\\\  @\r\n | (_) | @\r\n $\\\\___/$ @\r\n         @@\r\n         `","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif ('GITHUB_ACTIONS' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","import chalk from 'chalk'\n\nexport const normalMsg = (msg) => console.log(chalk.yellow(msg))\n\nexport const errorMsg = (msg) => console.log(chalk.red(msg))\n\nexport const infoMsg = (msg) => console.log(chalk.blue(msg))\n","import fs from 'fs'\nimport path from 'path'\nimport figlet from 'figlet'\nimport clear from 'clear'\nimport figStandard from 'figlet/importable-fonts/Standard.js'\n\nimport { normalMsg, errorMsg, infoMsg } from './colorStates'\n\nconst getCurrentDir = () => path.basename(process.cwd())\n\nconst dirExists = (fpath) => fs.existsSync(fpath)\n\nconst sendCliHeading = () => {\n  figlet.parseFont('Standard', figStandard)\n\n  normalMsg(\n    figlet.textSync('Vaq (vim awesome query)', {\n      font: 'Standard'\n    })\n  )\n}\n\n// fetchAllPlugins()\n\nclear()\n\nsendCliHeading()\n"]}